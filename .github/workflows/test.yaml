name: Debug Go Build and Test

on: [push]

permissions:
  contents: read

jobs:
  setup-auth:
    name: Authenticate with GitHub App
    runs-on: ubuntu-latest
    steps:
      - name: Install JWT Tool
        run: sudo apt-get install -y jq openssl
      - name: Echo GitHub App Secrets (DEBUGGING)
        run: |
          echo "GH_APP_ID: ${{ secrets.GH_APP_ID }}"
          echo "GH_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}"
          echo "GH_APP_PRIVATE_KEY (first 100 chars):"
          echo "${{ secrets.GH_APP_PRIVATE_KEY }}" | head -c 100
          echo "Note: Truncated for safety."
      - name: Generate GitHub App Access Token
        env:
          GH_APP_ID: ${{ secrets.GH_APP_ID }}
          GH_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}
          GH_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
        run: |
          echo "Generating JWT..."
          now=$(date +%s)
          header='{"alg":"RS256","typ":"JWT"}'
          payload="{\"iat\":$((now - 60)),\"exp\":$((now + 600)),\"iss\":${GH_APP_ID}}"
          echo "JWT Payload: $payload"

          unsigned_token=$(echo -n "${header}" | openssl base64 -e -A).$(echo -n "${payload}" | openssl base64 -e -A)
          export JWT=$(echo -n "${unsigned_token}" | openssl dgst -sha256 -sign <(echo "${GH_APP_PRIVATE_KEY}") | openssl base64 -e -A)

          echo "JWT: $JWT (Truncated for safety)" | head -c 100

          echo "Requesting GitHub App Access Token..."
          export GITHUB_TOKEN=$(curl -s -X POST \
            -H "Authorization: Bearer ${JWT}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/app/installations/${GH_APP_INSTALLATION_ID}/access_tokens | jq -r .token)

          echo "Generated GITHUB_TOKEN (Truncated for safety):"
          echo $GITHUB_TOKEN | head -c 100
          echo "Note: Truncated for safety."

          echo "Configuring Git for HTTPS Authentication..."
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          git config --list
          echo "GOPRIVATE=github.com/EO-DataHub" >> $GITHUB_ENV

  go-build:
    name: Debug Build and Test
    needs: setup-auth
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Echo Go Environment Variables
        run: |
          echo "Printing Go Environment Variables..."
          go env
      - name: Install dependencies with Debugging
        run: |
          echo "Downloading modules..."
          go env -w GOPRIVATE=github.com/EO-DataHub
          go mod tidy
          go mod download
